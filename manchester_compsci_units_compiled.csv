code,title,credits,mandatory,url,description,assessment_data,corequisites_list,freechoice,level,prerequisites_list,schedule_data,semesters
COMP10120,First Year Team Project,20,Mandatory,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP10120,"This course unit is all about teamwork, communication, and active learning: in your team and with your tutor, you work on various tasks, thereby gaining valuable experience in teamwork and developing useful skills around communication, reflection, self-organisation, time management, independently acquiring new knowledge and skills, professional behaviour, project organisation, etc. The tasks teams work on include understanding ethical frameworks for computer science professionals, intellectual property issues, and the development of a web-based information system.","[{'course_code': 'COMP10120', 'assessment_type_id': 1, 'percentage': 0.4}, {'course_code': 'COMP10120', 'assessment_type_id': 2, 'percentage': 0.4}, {'course_code': 'COMP10120', 'assessment_type_id': 3, 'percentage': 0.2}]",,False,1,,"[{'course_code': 'COMP10120', 'schedule_type_id': 1, 'hours': 1.8333333333333333}, {'course_code': 'COMP10120', 'schedule_type_id': 2, 'hours': 3.4166666666666665}, {'course_code': 'COMP10120', 'schedule_type_id': 3, 'hours': 1.9166666666666667}, {'course_code': 'COMP10120', 'schedule_type_id': 4, 'hours': 9.5}]",Full year
COMP11120,Mathematical Techniques for Computer Science,20,Mandatory,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP11120,"This course covers the fundamental maths required by Computer Science students in order to successfully complete the reminder of their courses as well as for a career in computer science. Topics covered include complex numbers, logic, probability, recursion and induction, relations, vectors, matrices and transformations.","[{'course_code': 'COMP11120', 'assessment_type_id': 4, 'percentage': 0.8}, {'course_code': 'COMP11120', 'assessment_type_id': 1, 'percentage': 0.2}]",,False,1,,"[{'course_code': 'COMP11120', 'schedule_type_id': 1, 'hours': 1.8333333333333333}, {'course_code': 'COMP11120', 'schedule_type_id': 2, 'hours': 1.8333333333333333}, {'course_code': 'COMP11120', 'schedule_type_id': 4, 'hours': 12.666666666666666}]",Full year
COMP11212,Fundamentals of Computation,10,Mandatory,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP11212,"Student comments: 'The material was very interesting and I could definitely see it being useful on the near future. Overall, I enjoyed this course unit, because I felt that it extended to other course units.' - 'Through the material covered you understand better how the computer interpretes data (and generally works), and learn more about programming languages and algorithms.' - 'The course content was extremely interesting, and the PhD demonstrators were helpful and approachable. I am glad I took this module.'","[{'course_code': 'COMP11212', 'assessment_type_id': 4, 'percentage': 0.8}, {'course_code': 'COMP11212', 'assessment_type_id': 1, 'percentage': 0.2}]",COMP11120,True,1,,"[{'course_code': 'COMP11212', 'schedule_type_id': 1, 'hours': 0.9166666666666666}, {'course_code': 'COMP11212', 'schedule_type_id': 2, 'hours': 0.9166666666666666}, {'course_code': 'COMP11212', 'schedule_type_id': 4, 'hours': 6.333333333333333}]",Semester 2
COMP12111,Fundamentals of Computer Engineering,10,Mandatory,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP12111,In this course you will learn about the design of digital electronic systems from simple digital circuits to the design of a simple processor. The exercises undertaken in laboratories complement the material covered in lectures. Professional commercial software tools are used in laboratories to enter designs and simulate their behaviour.,"[{'course_code': 'COMP12111', 'assessment_type_id': 4, 'percentage': 0.5}, {'course_code': 'COMP12111', 'assessment_type_id': 5, 'percentage': 0.5}]",,True,1,,"[{'course_code': 'COMP12111', 'schedule_type_id': 1, 'hours': 1.25}, {'course_code': 'COMP12111', 'schedule_type_id': 2, 'hours': 1.6666666666666667}, {'course_code': 'COMP12111', 'schedule_type_id': 4, 'hours': 5.333333333333333}]",Semester 1
COMP13212,Data Science,10,Mandatory,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP13212,"This course unit has two objectives. The first is to introduce the student to a range of fundamental, non-trivial algotithms, and to the techniques required to analyse their correctness and running-time. The second is to present a conceptual framework for analysing the intrinsic complexity of computational problems, which abstracts away from details of particular algorithms.","[{'course_code': 'COMP13212', 'assessment_type_id': 4, 'percentage': 0.8}, {'course_code': 'COMP13212', 'assessment_type_id': 5, 'percentage': 0.2}]",,True,1,,"[{'course_code': 'COMP13212', 'schedule_type_id': 1, 'hours': 1.8333333333333333}, {'course_code': 'COMP13212', 'schedule_type_id': 2, 'hours': 1.0}, {'course_code': 'COMP13212', 'schedule_type_id': 4, 'hours': 5.5}]",Semester 2
COMP15111,Fundamentals of Computer Architecture,10,Mandatory,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP15111,"The module introduces Fundamental concepts involved in Computer Architecture, which is the study and design of Computer Systems. Among others, the module discusses architecture terminology (how do we talk about computer systems), models (how do we think about computer systems), topologies (how are computers structured), how programs are executed by the hardware, and how data (whether numbers, text, colours, or polygons) are represented in hardware using only binary digits. Understanding the Fundamentals of Computer Architecture is essential for being able to reason about what exactly happens when we run a program. This is important not just for hardware designers and low level (Operating System, embedded) software developers, but for everyone that wants to create high performing, but still correct, software. As such, it is an increasingly important skill in Computer Science roles in business and finance. More generally, demystifying Computer Systems gives students a strong competitive advantage relative to developers that have no concept of what their code does, whether these developers are human ones or AI models. To be more specific, the course will help students: Understand the basic Von Neumann/Imperative computational model.   Understand the binary nature of digital computers, and how bit patterns can be used to represent such things as characters, numbers, and instructions.   Understand the essentials of the RISC-V instruction set and its registers.   Be able to understand the basics of assembly language programs.   Understand the correspondence between imperative code & data and assembly language.   Reason about the roles and interplay of the standard components of System Software (Compiler, Assembler, Library, Linker, Loader, Interpreter and Operating System), including how they are influenced by the design decision of the underlying computer hardware. Key and Cognitive skills: The module will expand the student's vocabulary with respect to the technical terminology of Computer Architecture, while also providing the cognitive foundation for understanding the design and operation of Computer Systems. Over the course of this module, the students will become able to reason about how programs are executed, how data is stored, and how to make programs faster. The student will be empowered to learn through multi-format lectures and Self-study-learning techniques. New concepts are introduced through pre-recorded Lectures, then these concepts are re-examined in a more practical context in Live Lectures. Each pre-recorded lecture comes with a set of associated formative (unmarked) questions that helps students get immediate feedback about their understanding of the material. Additionally, students can take part in an interactive quiz in the live lecture to gauge how well they are doing relative to the rest of the cohort. Question sets that test wider parts of the taught material are released every two weeks. Finally, the lectures are supported by a set of Lab assignments that expand and solidify the student’s knowledge through a “learning by doing” approach.","[{'course_code': 'COMP15111', 'assessment_type_id': 4, 'percentage': 0.7}, {'course_code': 'COMP15111', 'assessment_type_id': 5, 'percentage': 0.3}]",,True,1,,"[{'course_code': 'COMP15111', 'schedule_type_id': 1, 'hours': 0.9166666666666666}, {'course_code': 'COMP15111', 'schedule_type_id': 2, 'hours': 1.3333333333333333}, {'course_code': 'COMP15111', 'schedule_type_id': 4, 'hours': 5.916666666666667}]",Semester 1
COMP15212,Operating Systems,10,Mandatory,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP15212,,"[{'course_code': 'COMP15212', 'assessment_type_id': 4, 'percentage': 0.8}, {'course_code': 'COMP15212', 'assessment_type_id': 5, 'percentage': 0.2}]",,True,1,,"[{'course_code': 'COMP15212', 'schedule_type_id': 1, 'hours': 3.3333333333333335}, {'course_code': 'COMP15212', 'schedule_type_id': 2, 'hours': 1.6666666666666667}, {'course_code': 'COMP15212', 'schedule_type_id': 4, 'hours': 3.3333333333333335}]",Semester 2
COMP16321,Introduction to Programming 1,20,Mandatory,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP16321,"This course offers a comprehensive introduction to programming through Python, one of the most accessible and widely used programming languages today. Students will explore core programming concepts including variables, control structures, functions, file handling, and modular design. The curriculum also covers practical skills such as using libraries, building graphical user interfaces, implementing animations, and visualising data. With an emphasis on writing maintainable and secure code, students will gain the confidence to analyse, design, and implement solutions to real-world problems. Through a blend of foundational theory and hands-on coding experience, this course equips learners with the essential tools and mindset to begin their journey as capable, problem-solving developers.","[{'course_code': 'COMP16321', 'assessment_type_id': 4, 'percentage': 0.5}, {'course_code': 'COMP16321', 'assessment_type_id': 5, 'percentage': 0.5}]",COMP16412,False,1,,"[{'course_code': 'COMP16321', 'schedule_type_id': 1, 'hours': 0.8333333333333334}, {'course_code': 'COMP16321', 'schedule_type_id': 2, 'hours': 1.5}, {'course_code': 'COMP16321', 'schedule_type_id': 4, 'hours': 14.166666666666666}]",Semester 1
COMP16412,Introduction to Programming 2,10,Mandatory,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP16412,"This course introduces the concepts of object oriented programming using the Java 	language. The features of the object oriented paradigm will be illustrated through theoretical 	classes, and practical workshops and labs.","[{'course_code': 'COMP16412', 'assessment_type_id': 4, 'percentage': 0.5}, {'course_code': 'COMP16412', 'assessment_type_id': 5, 'percentage': 0.5}]",COMP16321,True,1,,"[{'course_code': 'COMP16412', 'schedule_type_id': 1, 'hours': 0.5}, {'course_code': 'COMP16412', 'schedule_type_id': 2, 'hours': 2.75}, {'course_code': 'COMP16412', 'schedule_type_id': 4, 'hours': 5.083333333333333}]",Semester 2
COMP23311,Software Engineering 1,10,Mandatory,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP23311,"This course covers many aspects of software engineering and contains much essential information about working with a large codebase authored by many programmers, most of whom are not around.","[{'course_code': 'COMP23311', 'assessment_type_id': 4, 'percentage': 0.7}, {'course_code': 'COMP23311', 'assessment_type_id': 5, 'percentage': 0.3}]",,False,2,"COMP16321,COMP16412","[{'course_code': 'COMP23311', 'schedule_type_id': 2, 'hours': 5.333333333333333}, {'course_code': 'COMP23311', 'schedule_type_id': 4, 'hours': 2.9166666666666665}]",Semester 1
COMP23412,Software Engineering 2,10,Mandatory,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP23412,"This course prepares you to build interactive, real-world web applications using modern development frameworks and team-based agile practices. You will work in a simulated software company, with weekly requirements from ‘customers’ (your lecturers) that range from precise to deliberately ambiguous – just like the real world. Working in teams, you will learn to break down requirements, clarify ambiguity through customer engagement, and deliver high-quality software through continuous integration and testing. Along the way, you will develop fluency in an industry-standard framework, navigating documentation and architectural patterns to solve evolving challenges. What you will gain: Real-world experience in team-based software engineering. Confidence working with a modern web development framework. Skills in requirements analysis, rapid learning, and iterative development. The ability to build and test usable, robust web applications. Hands-on experience working with APIs – both consuming and creating them. You will leave the course ready to hit the ground running in a professional development team.","[{'course_code': 'COMP23412', 'assessment_type_id': 4, 'percentage': 0.5}, {'course_code': 'COMP23412', 'assessment_type_id': 6, 'percentage': 0.5}]",,False,2,COMP23311,"[{'course_code': 'COMP23412', 'schedule_type_id': 1, 'hours': 0.8333333333333334}, {'course_code': 'COMP23412', 'schedule_type_id': 2, 'hours': 1.8333333333333333}, {'course_code': 'COMP23412', 'schedule_type_id': 5, 'hours': 0.6666666666666666}, {'course_code': 'COMP23412', 'schedule_type_id': 4, 'hours': 4.833333333333333}]",Semester 2
COMP26020,Programming Languages & Paradigms,20,Mandatory,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP26020,There is a variety of programming languages designed with different features aiming to address different types of problems. The unit is an advanced course for students who have already mastered one programming language. It is trying to consider the broad spectrum of different programming paradigms and how these can be used and translated.,"[{'course_code': 'COMP26020', 'assessment_type_id': 4, 'percentage': 0.7}, {'course_code': 'COMP26020', 'assessment_type_id': 1, 'percentage': 0.3}]",,False,2,"COMP16321,COMP16412","[{'course_code': 'COMP26020', 'schedule_type_id': 1, 'hours': 3.6666666666666665}, {'course_code': 'COMP26020', 'schedule_type_id': 2, 'hours': 1.6666666666666667}, {'course_code': 'COMP26020', 'schedule_type_id': 4, 'hours': 11.333333333333334}]",Full year
COMP26120,Algorithms and Data Structures,20,Mandatory,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP26120,"This course unit covers fundamental material in Computer Science concerning algorithms and their correctness and performance. It is a two-semester practical course, with some video and reading resources, considerable practical experience and lab support. The student is expected to seek out material to support work on the course, thus contributing to developing ""algorithmic literacy"". The implementation of algorithms is illustrated in C, Java and Python.","[{'course_code': 'COMP26120', 'assessment_type_id': 4, 'percentage': 0.5}, {'course_code': 'COMP26120', 'assessment_type_id': 5, 'percentage': 0.5}]",,False,2,"COMP16321,COMP16412","[{'course_code': 'COMP26120', 'schedule_type_id': 1, 'hours': 1.8333333333333333}, {'course_code': 'COMP26120', 'schedule_type_id': 2, 'hours': 3.6666666666666665}, {'course_code': 'COMP26120', 'schedule_type_id': 4, 'hours': 10.833333333333334}]",Full year
COMP21111,Logic and Modelling,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP21111,"This is a unique course developed at the University of Manchester. It explains how implementations of logic can be used to solve a number a number of problems, such as solving hardest Sudoku puzzles in no time, analysing two-player games, or finding serious errors in computer systems","[{'course_code': 'COMP21111', 'assessment_type_id': 4, 'percentage': 0.5}, {'course_code': 'COMP21111', 'assessment_type_id': 1, 'percentage': 0.5}]",,True,2,"COMP11120,MATH11022,MATH11121","[{'course_code': 'COMP21111', 'schedule_type_id': 1, 'hours': 2.0}, {'course_code': 'COMP21111', 'schedule_type_id': 2, 'hours': 0.75}, {'course_code': 'COMP21111', 'schedule_type_id': 4, 'hours': 5.416666666666667}]",Semester 1
COMP22111,Processor Microarchitecture,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP22111,This course unit aims to reinforce and extend digital hardware development skills which are introduced in the first year. It employs industry-standard tools and languages which are used worldwide for silicon development. The UK has perhaps the strongest expertise in Europe in these areas and skills are in high demand from employers such as ARM and Imagination Technologies who provide much of the digital design for devices such as smartphones and tablet computers.,"[{'course_code': 'COMP22111', 'assessment_type_id': 4, 'percentage': 0.5}, {'course_code': 'COMP22111', 'assessment_type_id': 5, 'percentage': 0.5}]",,True,2,COMP12111,"[{'course_code': 'COMP22111', 'schedule_type_id': 1, 'hours': 1.8333333333333333}, {'course_code': 'COMP22111', 'schedule_type_id': 2, 'hours': 1.5}, {'course_code': 'COMP22111', 'schedule_type_id': 4, 'hours': 4.833333333333333}]",Semester 1
COMP22712,Microcontrollers,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP22712,"The module is a strong practical reinforcement of the software/hardware interface.  It provides experience in hardware/software codesign as well as dealing with interfacing techniques, from 'bit fiddling' to interrupt routines.  There is also an underpinning of operating systems and their implications in machine architecture.  The module uses custom designed hardware and software tools developed locally for this specific purpose.","[{'course_code': 'COMP22712', 'assessment_type_id': 5, 'percentage': 1.0}]",,True,2,COMP15111,"[{'course_code': 'COMP22712', 'schedule_type_id': 2, 'hours': 2.0}, {'course_code': 'COMP22712', 'schedule_type_id': 4, 'hours': 6.333333333333333}]",Semester 2
COMP23111,Database Systems,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP23111,"This course provides a comprehensive exploration of databases, emphasizing their pivotal role in modern computing and data management. Students will learn the principles of database design, implementation, and management, with a focus on the relational model, SQL, and normalization. The curriculum also covers database integration with web and front-end systems, transaction management, security, and emerging paradigms like NoSQL. By blending theory with hands-on practice, students will develop essential skills in designing robust databases, writing advanced queries, and leveraging database technologies for real-world applications.","[{'course_code': 'COMP23111', 'assessment_type_id': 4, 'percentage': 0.3}, {'course_code': 'COMP23111', 'assessment_type_id': 5, 'percentage': 0.7}]",,True,2,,"[{'course_code': 'COMP23111', 'schedule_type_id': 2, 'hours': 2.5}, {'course_code': 'COMP23111', 'schedule_type_id': 4, 'hours': 5.416666666666667}]",Semester 1
COMP24011,Introduction to AI,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP24011,The Unit aims to make students familiar with the basic concepts and techniques of Artificial Intelligence. It provides the knowledge and understanding that underpins later course units in the subject taught in the Department.,"[{'course_code': 'COMP24011', 'assessment_type_id': 4, 'percentage': 0.8}, {'course_code': 'COMP24011', 'assessment_type_id': 1, 'percentage': 0.2}]",,True,2,"COMP11120,COMP13212","[{'course_code': 'COMP24011', 'schedule_type_id': 1, 'hours': 1.8333333333333333}, {'course_code': 'COMP24011', 'schedule_type_id': 2, 'hours': 0.6666666666666666}, {'course_code': 'COMP24011', 'schedule_type_id': 4, 'hours': 5.833333333333333}]",Semester 1
COMP24112,Machine Learning,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP24112,"The world is filling up with data - billions of images online, billions of supermarket transactions, billions of events pouring out of our everyday lives.   Machine Learning is about designing algorithms capable of automatically learning patterns from this supplied data. Examples of this are in online shopping like Amazon.com - which learns what products you like to buy, or in spam detection systems, which learn what spam looks like as you tag it in your spam folder. 	  	In this course unit we will introduce you to the basics of these algorithms, implementing a basic spam filter and a handwriting recognition engine.","[{'course_code': 'COMP24112', 'assessment_type_id': 4, 'percentage': 0.7}, {'course_code': 'COMP24112', 'assessment_type_id': 5, 'percentage': 0.3}]",COMP24011,True,2,"COMP11120,COMP13212,MATH11121","[{'course_code': 'COMP24112', 'schedule_type_id': 1, 'hours': 1.8333333333333333}, {'course_code': 'COMP24112', 'schedule_type_id': 2, 'hours': 1.0}, {'course_code': 'COMP24112', 'schedule_type_id': 4, 'hours': 5.333333333333333}]",Semester 2
COMP24412,Knowledge Based AI,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP24412,"Intelligent systems need to be able to represent and reason about the world. This course provides an introduction to the key ideas in knowledge representation and different types of automated reasoning. The course is a mixture of theoretical and practical work: at the end of the course students will know the principles that such systems use, and they will have experience of implementing those principles in running systems.","[{'course_code': 'COMP24412', 'assessment_type_id': 4, 'percentage': 0.3}, {'course_code': 'COMP24412', 'assessment_type_id': 5, 'percentage': 0.7}]",COMP24011,True,2,,"[{'course_code': 'COMP24412', 'schedule_type_id': 1, 'hours': 1.8333333333333333}, {'course_code': 'COMP24412', 'schedule_type_id': 2, 'hours': 0.8333333333333334}, {'course_code': 'COMP24412', 'schedule_type_id': 4, 'hours': 6.416666666666667}]",Semester 2
COMP25212,System Architecture,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP25212,"The basic architecture of computer systems has been covered in first year course units which detailed both the instruction set architecture and the micro-architecture (hardware structure) of simple processors. Although these principles underlie the vast majority of modern computers, there is a wide range of both hardware and software techniques which are employed to increase the performance, reliability and flexibility of systems.","[{'course_code': 'COMP25212', 'assessment_type_id': 4, 'percentage': 0.7}, {'course_code': 'COMP25212', 'assessment_type_id': 5, 'percentage': 0.3}]",,True,2,COMP15111,"[{'course_code': 'COMP25212', 'schedule_type_id': 1, 'hours': 1.8333333333333333}, {'course_code': 'COMP25212', 'schedule_type_id': 2, 'hours': 1.0}, {'course_code': 'COMP25212', 'schedule_type_id': 4, 'hours': 5.333333333333333}]",Semester 2
COMP27112,Introduction to Visual Computing,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP27112,"Visual Computing brings together two fundamentally important aspects of modern computing: Computer Graphics - concerned with the synthesis of images from computer models - and Image Processing, which deals with analysis and understanding of images by computers. There are now considerable overlaps between these two, traditionally separate, fields of research and their applications. 	The Visual Computing theme consists of the following course units: 	•   Year 2: Computer Graphics and Image Processing (10 credits) 	•   Year 3: Advanced Computer Graphics (10 credits) 	•   Year 3: Computer Vision (10 credits)","[{'course_code': 'COMP27112', 'assessment_type_id': 4, 'percentage': 0.7}, {'course_code': 'COMP27112', 'assessment_type_id': 5, 'percentage': 0.3}]",,True,2,,"[{'course_code': 'COMP27112', 'schedule_type_id': 1, 'hours': 2.0}, {'course_code': 'COMP27112', 'schedule_type_id': 2, 'hours': 0.8333333333333334}, {'course_code': 'COMP27112', 'schedule_type_id': 4, 'hours': 5.333333333333333}]",Semester 2
COMP28112,Distributed Systems,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP28112,"The course unit assumes that students already have a solid understanding of the main principles of computing within a single machine, have a basic understanding of the issues related to machine communication and networking, and have a notion of what distributed computing is. The syllabus will contain topics covering the fundamentals of distributed computing, its application in modern systems and issues to be considered when designing distributed systems.","[{'course_code': 'COMP28112', 'assessment_type_id': 4, 'percentage': 0.5}, {'course_code': 'COMP28112', 'assessment_type_id': 5, 'percentage': 0.5}]",,True,2,"COMP16412,COMP15212","[{'course_code': 'COMP28112', 'schedule_type_id': 1, 'hours': 2.0}, {'course_code': 'COMP28112', 'schedule_type_id': 2, 'hours': 0.8333333333333334}, {'course_code': 'COMP28112', 'schedule_type_id': 4, 'hours': 5.333333333333333}]",Semester 2
COMP31311,Giving Meaning to Programs,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP31311,"Programming languages provide abstractions such as `functions’ which are supposed to allow us to reason about the code at a high level---without running it in our heads. However, these abstractions don’t necessarily behave in the way their names suggest. In this unit we show that a mathematical theory of program meanings can be developed which encompasses the counter-intuitive behaviour of computations, but preserves our ability to reason abstractly. The machinery required is significant, and delicate at times, and the unit will introduce the fundamental technical tools which help us cope with these complications.","[{'course_code': 'COMP31311', 'assessment_type_id': 4, 'percentage': 0.8}, {'course_code': 'COMP31311', 'assessment_type_id': 5, 'percentage': 0.2}]",,True,3,"MATH10111,COMP11120,MATH11121","[{'course_code': 'COMP31311', 'schedule_type_id': 2, 'hours': 1.8333333333333333}, {'course_code': 'COMP31311', 'schedule_type_id': 4, 'hours': 6.5}]",Semester 1
COMP32211,Implementing System-on-Chip Designs,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP32211,"The module provides an overview of the design and integration of computer systems onto chips.  Industrial-grade CAD tools are used to design a logic system, integrate it into a larger system and realise it on a programmable device.  These skills are in short supply and in high demand in the industry today.  It can also be very satisfying to build a real, visibly working system!","[{'course_code': 'COMP32211', 'assessment_type_id': 4, 'percentage': 0.5}, {'course_code': 'COMP32211', 'assessment_type_id': 5, 'percentage': 0.5}]",,True,3,COMP22111,"[{'course_code': 'COMP32211', 'schedule_type_id': 1, 'hours': 1.0}, {'course_code': 'COMP32211', 'schedule_type_id': 2, 'hours': 1.0}, {'course_code': 'COMP32211', 'schedule_type_id': 4, 'hours': 6.166666666666667}]",Semester 1
COMP32412,The Internet of Things:  Architectures and Applications,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP32412,"Augmenting objects, otherwise designed to perform a specific task, with the ability to connect to the Internet has led to a new technological paradigm called the Internet of Things (IoT). This course will introduce the students to this concept where high level tasks such as data analytics and fundamental hardware components, such as sensors and actuators are integrated to produce complex systems aimed at improving quality of life and benefit society. Considering the upcoming IoT revolution, this course unit offers a timely opportunity to familiarise yourself with the fundamental principles and primary issues that define the IoT. We put emphasis on the versatility of components that can be integrated into such systems, as well as the diversity of data types produced by the IoT edge-nodes. Successful development of IoT applications also requires communication between different levels (layers) of IoT architectures with the associated security and privacy issues.","[{'course_code': 'COMP32412', 'assessment_type_id': 4, 'percentage': 1.0}]",,False,3,COMP28112,"[{'course_code': 'COMP32412', 'schedule_type_id': 1, 'hours': 1.6666666666666667}, {'course_code': 'COMP32412', 'schedule_type_id': 2, 'hours': 0.5}, {'course_code': 'COMP32412', 'schedule_type_id': 4, 'hours': 6.166666666666667}]",Semester 2
COMP33312,Agile Software Pipelines,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP33312,"The approach to software development known as “agile software engineering” is now well established within the industry as the most reliable and cost-effective in all but a handful of rarely occurring circumstances.  Agile approaches emphasise the early and frequent delivery of releasable software artefacts to the client, combined with disciplined but flexible approaches to project progress tracking, to the continuous and active collection of feedback on the success (or otherwise) of the work done so far and to the creation of high-quality code bases that are easy and safe to change.    In an agile project, the first usable executable artefacts will be created very early in the project’s lifetime and may be in active use while other parts of the required functionality are still in various stages of development.  New and changed functionality is delivered incrementally at short intervals throughout the duration of the project, blurring the distinction between the development and the operational project phases.   While the human processes used to manage and carry out agile software engineering are highly iterative, the artefacts produced by the processes are increasingly viewed as passing through one or more linear “pipelines”, on their journey to deployment and use in the end-user environment.  New models for the delivery of software (such as continuous delivery) depend upon a carefully configured technical pipeline as much as they do upon effective and efficient human design and feedback processes.   In this course unit, we will examine how the combination of these iterative human processes and technical development and delivery pipelines is used to create software that provides real value and return on investment for clients and end-users, while also being of sufficiently high quality to allow frequent and sometimes substantial changes throughout the software’s lifetime.","[{'course_code': 'COMP33312', 'assessment_type_id': 4, 'percentage': 1.0}]",,False,3,"COMP23311,COMP23412","[{'course_code': 'COMP33312', 'schedule_type_id': 2, 'hours': 1.8333333333333333}, {'course_code': 'COMP33312', 'schedule_type_id': 4, 'hours': 6.333333333333333}]",Semester 2
COMP33511,User Experience,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP33511,"The aim of this course is to give you, the student, the tools, techniques, and the mindset necessary to competently approach your first user testing and user experience job. The course is designed from a practical perspective and will enable you to take a junior role in a user experience department, or usability company, and will provide you with the overall knowledge to communicate with others and make sensible suggestions regarding UX work. The unit is not intended to be a comprehensive treaties of the subject - indeed this could be accomplished in such a short space of time - however, it will provide the basis for the students future study within the domain.","[{'course_code': 'COMP33511', 'assessment_type_id': 4, 'percentage': 0.5}, {'course_code': 'COMP33511', 'assessment_type_id': 1, 'percentage': 0.5}]",,False,3,"COMP23311,COMP23412","[{'course_code': 'COMP33511', 'schedule_type_id': 1, 'hours': 0.9166666666666666}, {'course_code': 'COMP33511', 'schedule_type_id': 2, 'hours': 0.9166666666666666}, {'course_code': 'COMP33511', 'schedule_type_id': 4, 'hours': 6.416666666666667}]",Semester 1
COMP34111,AI and Games,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP34111,"The main contents of this module include:   1.  What is a game? (Definition of game, pay-off function, representations in normal form, and extensive form.) 2. What is a plan for decision-making in a game context? (Definition of strategy, representations of strategy.) 3. What does it mean to play a game well? (Definition of best-response strategy, equilibrium point, discussion of the validity of these concepts, discussion of alternatives.) 4. Properties of the Nash equilibrium. (How it incentivizes bad outcomes to prevent opponents from taking advantage.) 5. How do we find good game plans? (Complexity of finding equilibrium points, minimax algorithm, alpha-beta pruning, discussion of the components of a typical game playing program via evaluation function and alpha-beta search) 6. How do we learn good game plans? (Introduction to reinforcement learning, learning through ""self-play"", TD-learning, Monte Carlo Tree Search.)","[{'course_code': 'COMP34111', 'assessment_type_id': 4, 'percentage': 0.5}, {'course_code': 'COMP34111', 'assessment_type_id': 1, 'percentage': 0.5}]",,False,3,"COMP11120,COMP13212,MATH11121,MATH10111","[{'course_code': 'COMP34111', 'schedule_type_id': 1, 'hours': 1.0}, {'course_code': 'COMP34111', 'schedule_type_id': 2, 'hours': 0.8333333333333334}, {'course_code': 'COMP34111', 'schedule_type_id': 6, 'hours': 0.4166666666666667}, {'course_code': 'COMP34111', 'schedule_type_id': 4, 'hours': 5.833333333333333}]",Semester 1
COMP34212,Cognitive Robotics,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP34212,"This unit provides an in-depth understanding of the field of cognitive robotics. This will analyse the selection, use and combination of methods and approaches in robotics, in artificial intelligence and in psychology and neuroscience to design intelligent behaviour and cognitive skills in interactive robots.","[{'course_code': 'COMP34212', 'assessment_type_id': 4, 'percentage': 0.7}, {'course_code': 'COMP34212', 'assessment_type_id': 1, 'percentage': 0.3}]",,True,3,,"[{'course_code': 'COMP34212', 'schedule_type_id': 1, 'hours': 1.3333333333333333}, {'course_code': 'COMP34212', 'schedule_type_id': 2, 'hours': 0.6666666666666666}, {'course_code': 'COMP34212', 'schedule_type_id': 4, 'hours': 6.333333333333333}]",Semester 2
COMP34312,Mathematical Topics in Machine Learning,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP34312,"Topic 1: Empirical risk minimization, regularisation; bias/variance theory and the relation to overfitting; probabilistic view: likelihood vs loss, introducing exponential families.   Topic 2: Information theory: KL-divergence vs. cross-entropy, mutual information; the view of ML as compression.   Topic 3: Optimization theory (calculus). Why GD?  What are convex and non-convex functions? How do gradients inform how we optimize a function? How can we use second order properties? How can we prove whether a method will converge?   Topic 4: Dimensionality reduction (matrix algebra). “refine, denoise, and visualise your data”.  Data usually has limited degrees of interest, living on a low-dimensional manifold within a high-dimensional space. This topic will introduce students to matrix-algebra-intensive methods used to learn feature dimensions that can aid in your model fitting process. Examples include PCA, spectral embedding, Fisher discriminant analysis, etc. These allow visualisation, denoising and enhancing the separation of data for classification.","[{'course_code': 'COMP34312', 'assessment_type_id': 4, 'percentage': 0.8}, {'course_code': 'COMP34312', 'assessment_type_id': 1, 'percentage': 0.2}]",,True,3,COMP24112,"[{'course_code': 'COMP34312', 'schedule_type_id': 1, 'hours': 0.9166666666666666}, {'course_code': 'COMP34312', 'schedule_type_id': 2, 'hours': 0.9166666666666666}, {'course_code': 'COMP34312', 'schedule_type_id': 4, 'hours': 6.333333333333333}]",Semester 2
COMP34612,Computational Game Theory,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP34612,"There has been a substantial grow of research activity at the boundaries of game theory, artificial intelligence, economics, computer science, and a number of other disciplines in recent years. The reasons behind this are twofold: On the one hand, game theory and its applications raise many important and challenging computing, learning, and communication problems to CS and AI; On the other hand, game theory provides important insights and powerful frameworks to a number of CS topics, including AI, Multi-agent systems, computer networks as well as many others.   The main contents of this module include: 1) To introduce the concepts and computational solutions for non-cooperative and cooperative game theory with their applications 2) To introduce the machine learning techniques to solve the learning issues arise from the applications of game theory with their applications 3) To introduce the mechanism design (the reverse game theory) and its applications for the design of the rules of a game   The module includes a major piece of coursework (a group project run over 5 weeks) to apply game theory and learning methods covered to solve the pricing game problem.","[{'course_code': 'COMP34612', 'assessment_type_id': 4, 'percentage': 0.5}, {'course_code': 'COMP34612', 'assessment_type_id': 1, 'percentage': 0.5}]",COMP34111,False,3,"COMP11120,COMP13212,COMP24112,MATH11121","[{'course_code': 'COMP34612', 'schedule_type_id': 7, 'hours': 0.5}, {'course_code': 'COMP34612', 'schedule_type_id': 1, 'hours': 1.0}, {'course_code': 'COMP34612', 'schedule_type_id': 2, 'hours': 0.8333333333333334}, {'course_code': 'COMP34612', 'schedule_type_id': 4, 'hours': 6.0}]",Semester 2
COMP34711,Natural Language Processing,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP34711,"This course unit will cover the key linguistic and algorithmic foundations of natural language processing. It will explore the main challenges in representing, searching and retrieving written documents, representing word semantics, and processing and identifying patterns in speech. It will consider both rule-based methods and machine/deep learning methods, and introduce key applications such as text information retrieval, text classification, word sense disambiguation, speech synthesis and speech recognition.","[{'course_code': 'COMP34711', 'assessment_type_id': 4, 'percentage': 0.7}, {'course_code': 'COMP34711', 'assessment_type_id': 1, 'percentage': 0.3}]",,False,3,COMP24112,"[{'course_code': 'COMP34711', 'schedule_type_id': 1, 'hours': 1.8333333333333333}, {'course_code': 'COMP34711', 'schedule_type_id': 2, 'hours': 0.9166666666666666}, {'course_code': 'COMP34711', 'schedule_type_id': 4, 'hours': 5.583333333333333}]",Semester 1
COMP34812,Natural Language Understanding,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP34812,"Drawing from concepts covered in the prerequisite COMP34711: Natural Language Processing unit, this unit will enable students to look more deeply into how machines analyse and recognise meaning expressed in natural language. In this unit, students will gain hands-on experience in investigating solutions to a number of natural language understanding tasks. This will provide students with the know-how required to develop technologies for real-world applications enabling communication between humans and machines, which have become increasingly ubiquitous and indispensable.","[{'course_code': 'COMP34812', 'assessment_type_id': 4, 'percentage': 0.7}, {'course_code': 'COMP34812', 'assessment_type_id': 5, 'percentage': 0.3}]",,False,3,COMP34711,"[{'course_code': 'COMP34812', 'schedule_type_id': 1, 'hours': 1.6666666666666667}, {'course_code': 'COMP34812', 'schedule_type_id': 2, 'hours': 0.8333333333333334}, {'course_code': 'COMP34812', 'schedule_type_id': 4, 'hours': 5.833333333333333}]",Semester 2
COMP35112,Chip Multiprocessors,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP35112,"Due to technological limitations, it is proving increasingly difficult to maintain a continual increase in the performance of individual processors. Therefore, the current trend is to integrate multiple processors on to a single chip and exploit the resulting parallel resources to achieve higher computing power. However, this may require significantly different approaches to both hardware and software particularly for general purpose applications. This course will explore these issues in detail.","[{'course_code': 'COMP35112', 'assessment_type_id': 4, 'percentage': 0.7}, {'course_code': 'COMP35112', 'assessment_type_id': 1, 'percentage': 0.3}]",,True,3,COMP25212,"[{'course_code': 'COMP35112', 'schedule_type_id': 1, 'hours': 2.0}, {'course_code': 'COMP35112', 'schedule_type_id': 4, 'hours': 6.333333333333333}]",Semester 2
COMP36111,Algorithms and Complexity,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP36111,"The Unit constitutes a self-contained introduction to the theory of Computational Complexity. It assumes no pre-requisites other than a knowledge of basic algorithms and mathematical notation. The teaching will be exclusively by means of traditional lectures, supported by the prescribed course text.","[{'course_code': 'COMP36111', 'assessment_type_id': 4, 'percentage': 0.8}, {'course_code': 'COMP36111', 'assessment_type_id': 3, 'percentage': 0.2}]",,True,3,"COMP11120,COMP11212,COMP26120,MATH11121,MATH10111,MATH10101","[{'course_code': 'COMP36111', 'schedule_type_id': 1, 'hours': 1.8333333333333333}, {'course_code': 'COMP36111', 'schedule_type_id': 4, 'hours': 6.5}]",Semester 1
COMP36212,Mathematical Systems and Computation,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP36212,"Mathematical systems can be used to describe many aspects of the world around us, from modelling physics and chemistry, to predicting financial markets and enabling machine learning and AI. By modelling systems mathematically it is possible to analyse them, and make predictions about their performance and how it can be optimised. Solution of these mathematical systems often relies on computational hardware and the application of algorithms which solve an approximate form of the problem. It is therefore important to understand the limitations imposed by the computational implementation of a given problem, and the effect this can have on a given solution.   The course explores these concepts from three perspectives: by introducing the notion of finite precision computation and error propagation within a computational process; through exploring techniques for the numerical solution of differential equations; and through the use of optimisation algorithms to maximise the performance of a solution to a given problem. These techniques are then applied to real-world problems, including physical and engineering systems, and machine learning operations within neural networks. The course targets students seeking to gain experience of how numerical computation is employed in industry and research, and who want a deeper understanding of how numerical algorithms and hardware combine when solving problems. It will help develop the skills necessary to work at the hardware-software interface, and in harnessing the power of hardware accelerators and modern computer architectures to develop fast, accurate and precise analysis tools.","[{'course_code': 'COMP36212', 'assessment_type_id': 1, 'percentage': 1.0}]",,True,3,COMP11120,"[{'course_code': 'COMP36212', 'schedule_type_id': 1, 'hours': 1.0}, {'course_code': 'COMP36212', 'schedule_type_id': 4, 'hours': 7.333333333333333}]",Semester 2
COMP37111,Graphics & Virtual Environments,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP37111,This Course Unit covers the principles of modern Computer Graphics from creation modelling of scenes through to animation and rendering with a particular focus on the quality and performance issues relating to the various techniques.,"[{'course_code': 'COMP37111', 'assessment_type_id': 4, 'percentage': 1.0}]",,False,3,COMP27112,"[{'course_code': 'COMP37111', 'schedule_type_id': 1, 'hours': 0.9166666666666666}, {'course_code': 'COMP37111', 'schedule_type_id': 4, 'hours': 7.25}]",Semester 1
COMP37212,Computer Vision,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP37212,,"[{'course_code': 'COMP37212', 'assessment_type_id': 4, 'percentage': 0.7}, {'course_code': 'COMP37212', 'assessment_type_id': 1, 'percentage': 0.3}]",,False,3,"COMP27112,COMP11120","[{'course_code': 'COMP37212', 'schedule_type_id': 1, 'hours': 1.9166666666666667}, {'course_code': 'COMP37212', 'schedule_type_id': 4, 'hours': 6.416666666666667}]",Semester 2
COMP38311,Advanced Distributed Systems,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/COMP38311,Distributed Systems: The Big Picture   Categories and Characteristics   Historical Perspective   Architectural Paradigms   Cloud Computing Concepts and Economics Resource Management   Provisioning   Scheduling   Load Balancing   Energy Management   Quality of Service Big Data as an Application Driver      Big Data: Drivers and the 4Vs      Batch: MapReduce      I nteractive: NoSQL     Streaming,"[{'course_code': 'COMP38311', 'assessment_type_id': 4, 'percentage': 1.0}]",,False,3,"COMP23111,COMP28112","[{'course_code': 'COMP38311', 'schedule_type_id': 2, 'hours': 0.9166666666666666}, {'course_code': 'COMP38311', 'schedule_type_id': 4, 'hours': 7.416666666666667}]",Semester 1
EEEN31001,Independent Study and Technical Explanations,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/EEEN31001,"You will independently study a technical topic of your choosing* related to your degree title then clearly explain it to your peers or the public by creating learning resources (e.g. videos, workbooks, and/or interactive notes). This is an opportunity for you to explore an area of interest while building useful skills for your career. The syllabus will include material on topics such as: finding and evaluating course material, creating effective graphics, recording videos, why explaining is hard, giving useful feedback, and similar. Where possible it will also include guest lectures discussing how and how often these skills are used in industry. *(topic will be agreed between you and the unit tutor)","[{'course_code': 'EEEN31001', 'assessment_type_id': 7, 'percentage': 0.24}]",,False,3,,"[{'course_code': 'EEEN31001', 'schedule_type_id': 1, 'hours': 2.0}, {'course_code': 'EEEN31001', 'schedule_type_id': 4, 'hours': 6.333333333333333}]",Semester 1
MCEL30031,Enterprise Management for Computer Scientists,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/MCEL30031,The unit enables students to critically analyse a range of issues that business managers face using a range of business tools and techniques.  The tools are explained in lectures and students are then encouraged to apply them in separate case study sessions.  Analysis often reveals a number of conflicting factors and students are required to make judgements based on evidence that justifies their decisions.,"[{'course_code': 'MCEL30031', 'assessment_type_id': 7, 'percentage': 0.24}]",,False,3,,"[{'course_code': 'MCEL30031', 'schedule_type_id': 1, 'hours': 2.0}, {'course_code': 'MCEL30031', 'schedule_type_id': 4, 'hours': 6.333333333333333}]",Variable teaching patterns
MCEL30032,Managing Finance in Enterprises for Computer Scientists,10,Optional,https://www.manchester.ac.uk/study/undergraduate/courses/2025/00560/bsc-computer-science/course-details/MCEL30032,"The unit aims to: 1. Allow students to understand and develop the necessary skills to produce a proposal to support a major project within an organisation or a business plan for a new start-up. 2. Introduce essential business finance and business risk management tools. 3. To explore resources required to form, develop and grow a business or a product line within a business. 4. To encourage students to think entrepreneurially as an essential component of their personal development.","[{'course_code': 'MCEL30032', 'assessment_type_id': 8, 'percentage': None}, {'course_code': 'MCEL30032', 'assessment_type_id': 9, 'percentage': None}, {'course_code': 'MCEL30032', 'assessment_type_id': 10, 'percentage': 1.0}]",,False,3,,"[{'course_code': 'MCEL30032', 'schedule_type_id': 1, 'hours': 2.0}, {'course_code': 'MCEL30032', 'schedule_type_id': 4, 'hours': 6.333333333333333}]",Semester 2
